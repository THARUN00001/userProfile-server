
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  userID: 'userID',
  firstName: 'firstName',
  lastName: 'lastName',
  emailID: 'emailID',
  phone: 'phone',
  dateOfBirth: 'dateOfBirth',
  gender: 'gender',
  address: 'address',
  city: 'city',
  state: 'state',
  country: 'country',
  postalCode: 'postalCode',
  userHeadline: 'userHeadline',
  userSummary: 'userSummary',
  skills: 'skills',
  experience: 'experience',
  passwordHash: 'passwordHash',
  profilePic: 'profilePic'
};

exports.Prisma.UserDetailsScalarFieldEnum = {
  userDetailsID: 'userDetailsID',
  currentOrRecentjobRole: 'currentOrRecentjobRole',
  currentOrRecentjobCompany: 'currentOrRecentjobCompany',
  currentOrRecentstartDate: 'currentOrRecentstartDate',
  currentOrRecentendDate: 'currentOrRecentendDate',
  currentOrRecentIsCurrent: 'currentOrRecentIsCurrent',
  currentOrRecentdescription: 'currentOrRecentdescription',
  collegeName: 'collegeName',
  degree: 'degree',
  fieldOfStudy: 'fieldOfStudy',
  endYear: 'endYear',
  gradeOrPercentage: 'gradeOrPercentage',
  projectTitle: 'projectTitle',
  projectDescription: 'projectDescription',
  technologiesUsed: 'technologiesUsed',
  projectURL: 'projectURL',
  website: 'website',
  github: 'github',
  linkedIn: 'linkedIn',
  resume: 'resume',
  userID: 'userID'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  UserDetails: 'UserDetails'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\WEB DEVELOPMENT\\projects\\userProfile\\server\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\WEB DEVELOPMENT\\projects\\userProfile\\server\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  userID       Int    @id @unique @default(autoincrement())\n  firstName    String\n  lastName     String\n  emailID      String @unique\n  phone        String @unique\n  dateOfBirth  String\n  gender       String\n  address      String\n  city         String\n  state        String\n  country      String\n  postalCode   Int\n  userHeadline String\n  userSummary  String\n  skills       String\n  experience   Int\n  passwordHash String\n  profilePic   String @default(\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\")\n\n  userDetails UserDetails[] // Connecting to userDetails table\n}\n\nmodel UserDetails {\n  userDetailsID              Int     @id @default(autoincrement())\n  currentOrRecentjobRole     String?\n  currentOrRecentjobCompany  String?\n  currentOrRecentstartDate   String?\n  currentOrRecentendDate     String?\n  currentOrRecentIsCurrent   Boolean @default(false)\n  currentOrRecentdescription String?\n\n  collegeName       String?\n  degree            String?\n  fieldOfStudy      String?\n  endYear           String?\n  gradeOrPercentage String?\n\n  projectTitle       String?\n  projectDescription String?\n  technologiesUsed   String?\n  projectURL         String?\n\n  website  String?\n  github   String?\n  linkedIn String?\n  resume   String?\n\n  // relation to User - one-to-one (each user -> one UserDetails)\n  user   User @relation(fields: [userID], references: [userID])\n  userID Int  @unique\n}\n",
  "inlineSchemaHash": "8a3a9f75d69e1c0f70310bc76fd4f23b84c6984a70e466ec0483f7d1e2a135dd",
  "copyEngine": false
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"userID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userHeadline\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userSummary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"experience\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePic\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userDetails\",\"kind\":\"object\",\"type\":\"UserDetails\",\"relationName\":\"UserToUserDetails\"}],\"dbName\":null},\"UserDetails\":{\"fields\":[{\"name\":\"userDetailsID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentOrRecentjobRole\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentOrRecentjobCompany\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentOrRecentstartDate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentOrRecentendDate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentOrRecentIsCurrent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"currentOrRecentdescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"collegeName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"degree\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fieldOfStudy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endYear\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gradeOrPercentage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"technologiesUsed\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectURL\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"github\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedIn\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resume\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserDetails\"},{\"name\":\"userID\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

